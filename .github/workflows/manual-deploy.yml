name: Manual Deployment to Maven Central

on: workflow_dispatch

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set up java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: maven
          gpg-private-key: ${{ secrets.MAVEN_GPG_PRIVATE_KEY }}
          gpg-passphrase:  ${{ secrets.MAVEN_GPG_PASSPHRASE }}
      - name: Compile
        run: mvn compile
  publish:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: maven
          server-id: ossrh
          server-username: MAVEN_USERNAME
          server-password: MAVEN_PASSWORD
          gpg-private-key: ${{ secrets.MAVEN_GPG_PRIVATE_KEY }}
          gpg-passphrase: MAVEN_GPG_PASSPHRASE
      - name: Publish package
        run: mvn clean deploy -DskipTests -Prelease
        env:
          MAVEN_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.OSSRH_TOKEN }}
          MAVEN_GPG_PASSPHRASE: ${{ secrets.MAVEN_GPG_PASSPHRASE }}
  tag_release:
    needs: publish
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Install xmllint
        run: sudo apt-get install -y libxml2-utils
      - name: Setup release information
        run: |
          pom_version=`xmllint --xpath '/*[local-name()="project"]/*[local-name()="version"]/text()' pom.xml`
          echo "POM_VERSION=$pom_version" >> $GITHUB_ENV
      - name: "Generate full changelog"
        id: extract-changelog
        uses: heinrichreimer/github-changelog-generator-action@v2.3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: "üñ®Ô∏è Print changelog to console"
        run: cat CHANGELOG.md
      - name: "üì§ Upload changelog"
        uses: actions/upload-artifact@v1.0.0
        with:
          name: "Changelog"
          path: CHANGELOG.md
      - name: "Generate release changelog"
        id: extract-changelog
        uses: heinrichreimer/github-changelog-generator-action@v2.3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          onlyLastTag: "true"
          stripHeaders: "true"
          stripGeneratorNotice: "true"
      - name: Create release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.POM_VERSION }}
          release_name: v${{ env.POM_VERSION }}
          draft: false
          prerelease: false
          body: ${{ steps.extract-changelog.outputs.changelog }}
